@model Fatec_Library.Models.Usuario
    @using Fatec_Library.Helpers
@{

    var nomeUsuario = User.Identity?.Name ?? "U";
    var inicial = nomeUsuario.Substring(0, 1).ToUpper();
    var cor = AvatarHelper.BackgroundColor(nomeUsuario);

    ViewData["Title"] = "Perfil";
}

@functions {
    public string FormatCpf(string cpf)
    {
        if (string.IsNullOrWhiteSpace(cpf) || cpf.Length != 11) return cpf;
        return Convert.ToUInt64(cpf).ToString(@"000\.000\.000\-00");
    }

    public string FormatRg(string rg)
    {
        if (string.IsNullOrWhiteSpace(rg) || rg.Length < 5) return rg;
        // Exemplo: 123456789 → 12.345.678-9 (adapte conforme o padrão que usa)
        return rg.Length == 9
            ? Convert.ToUInt64(rg).ToString(@"00\.000\.000\-0")
            : rg;
    }

    public string FormatPhone(string phone)
    {
        if (string.IsNullOrWhiteSpace(phone)) return phone;

        phone = new string(phone.Where(char.IsDigit).ToArray());

        return phone.Length switch
        {
            10 => Convert.ToUInt64(phone).ToString(@"(00) 0000\-0000"),
            11 => Convert.ToUInt64(phone).ToString(@"(00) 00000\-0000"),
            _ => phone
        };
    }
}


<h2 class="mb-4">Perfil</h2>

<div class="row g-3 justify-content-center mt-4">

    <div class="text-center row g-3 justify-content-center">

        <h1 class="rounded-circle d-flex justify-content-center align-items-center" style="width: 150px; height: 150px; background-color: @cor; color: white; font-weight: bold;">
            @inicial
        </h1>

        <h2 class="col-12">
            @Html.DisplayFor(model => model.Nome)
        </h2>

    </div>

    <dl class="row gy-3 p-md-5 col-md-12 pb-4 bg-white border border-danger-subtle border-2 rounded">

        <h3 class="text-center">Dados do Perfil</h3>


        <div class="col-md-6 p-3 ">
            <div class="col-md-12 border-bottom border-secondary border-1 ">

                <dt class="col-4">
                    @Html.DisplayNameFor(model => model.Email)
                </dt>
                <dd class="col-12">
                    @Html.DisplayFor(model => model.Email)
                </dd>

            </div>

            <div class="col-md-12 border-bottom border-secondary border-1 ">

                <dt class="col-4">
                    @Html.DisplayNameFor(model => model.Ra)
                </dt>
                <dd class="col-6">
                    @Html.DisplayFor(model => model.Ra)
                </dd>

            </div>

            <div class="col-md-12 border-bottom border-secondary border-1 ">

                <dt class="col-4">
                    @Html.DisplayNameFor(model => model.DataNascimento)
                </dt>
                <dd class="col-6">
                    @Model.DataNascimento.ToString("dd/MM/yyyy")
                </dd>

            </div>

            <div class="col-md-12 border-bottom border-secondary border-1 ">


                <dt class="col-4">
                    @Html.DisplayNameFor(model => model.Rg)
                </dt>
                <dd class="col-6">
                    @FormatRg(Model.Rg)
                </dd>


            </div>

            <div class="col-md-12 border-bottom border-secondary border-1">

                <dt class="col-4">
                    @Html.DisplayNameFor(model => model.Cpf)
                </dt>
                <dd class="col-6">
                    @FormatCpf(Model.Cpf)
                </dd>


            </div>
        </div>

        <div class="col-md-6 p-3 bg-white border border-2 border-danger-subtle rounded">

            <h3>Telefones</h3>

            <hr /> 

            <div class="col-md-12 h-75 overflow-y-scroll">

                @foreach (var telefone in Model.Telefones)
                {
                    <div>
                        <dd class="col-8 border-bottom border-secondary border-1">
                            @FormatPhone(telefone)
                        </dd>
                    </div>
                }

            </div>

        </div>

    </dl>

    <dl class="row gy-3 p-4 col-md-12 bg-white border border-danger-subtle border-2 rounded">

        <h3 class="text-center">Endereço</h3>

        <div class="col-md-12 border-bottom border-secondary border-1 ">

            <dt class="col-4">
                @Html.DisplayNameFor(model => model.Endereco.Rua)
            </dt>

            <dd class="col-12">
                @Html.DisplayFor(model => model.Endereco.Rua)
            </dd>


        </div>

        <div class="col-md-6 border-bottom border-secondary border-1 ">

            <dt class="col-4">
                @Html.DisplayNameFor(model => model.Endereco.Numero)
            </dt>
            <dd class="col-6">
                @Html.DisplayFor(model => model.Endereco.Numero)
            </dd>

        </div>

        <div class="col-md-6 border-bottom border-secondary border-1 ">

            <dt class="col-4">
                @Html.DisplayNameFor(model => model.Endereco.Bairro)
            </dt>
            <dd class="col-6">
                @Html.DisplayFor(model => model.Endereco.Bairro)
            </dd>

        </div>

        <div class="col-md-6 border-bottom border-secondary border-1 ">


            <dt class="col-4">
                @Html.DisplayNameFor(model => model.Endereco.Cidade)
            </dt>
            <dd class="col-6">
                @Html.DisplayFor(model => model.Endereco.Cidade)
            </dd>

        </div>

        <div class="col-md-6 border-bottom border-secondary border-1">

            <dt class="col-4">
                @Html.DisplayNameFor(model => model.Endereco.Cep)
            </dt>
            <dd class="col-6">
                @Html.DisplayFor(model => model.Endereco.Cep)
            </dd>

        </div>


        @* <div class="row col mt-4 rounded justify-content-center"> *@

        @*     @Html.ActionLink("Editar Endereço", "EditarEndereco", new { id = Model.Id }, new { @class = "btn btn-red text-light text-decoration-none col-md-3" }) *@

        @* </div> *@

    </dl>



</div>

<div class="d-flex gap-3 mt-5 mb-5 justify-content-center">
    @Html.ActionLink("Editar", "Edit", new { id = Model.Id }, new { @class = "btn btn-success text-light text-decoration-none col-md-3" })
    <a asp-controller="Home" asp-action="Index" class="btn btn-red col-md-3">Voltar a tela inicial</a>
</div>
